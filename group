#!/bin/sh

if ! pgrep X > /dev/null; then
    echo "${0##*/}: X isn't running"
    exit 1
fi

dir=$WM_DIR/group

usage() {
    cat << EOF >&2
usage: ${0##*/} l [GID]
       ${0##*/} f WID
       ${0##*/} (a|r|t) WID GID
       ${0##*/} (s|h|t) GID
EOF
    exit 1
}

list_active_groups() {
    for f in $(find $dir -type f); do
        if wattr ${f##*/}; then
            f=${f%/*}
            echo ${f##*/}
        fi
    done
}

list_group_windows() {
    for f in $(find $dir/$1 -type f); do
        echo ${f##*/}
    done
}

find_window_groups() {
    for f in $(find $dir -name $1); do
        f=${f%/*}
        echo ${f##*/}
    done
}

add_to_group() {
    wattr $1 || return
    true > $dir/$2/$1
}

remove_from_group() {
    rm -f $dir/$2/$1
}

toggle_window_group() {
    if test -f $dir/$2/$1; then
        remove_from_group $1 $2
    else
        add_to_group $1 $2
    fi
}

show_group_windows() {
    for f in $(find $dir/$1 -type f); do
        mapw -m ${f##*/}
    done
}

hide_group_windows() {
    for f in $(find $dir/$1 -type f); do
        mapw -u ${f##*/}
    done
}

toggle_group_windows() {
    w=$(ls -1 $dir/$1 | sed 1q)
    test -z "$w" && return

    if wattr m $w; then
        hide_group_windows $1
    else
        show_group_windows $1
    fi
}

setup() {
    for g in $(seq $WM_GROUPS); do
        mkdir -p $dir/$g
    done

    for f in $(find $dir -type f); do
        wattr ${f##*/} || rm -f $f
    done
}

setup

case $* in
    l)              list_active_groups        ;;
    l\ [0-9]*)      list_group_windows $2     ;;
    f\ 0x*)         find_window_groups $2     ;;
    a\ 0x*\ [0-9]*) add_to_group $2 $3        ;;
    r\ 0x*\ [0-9]*) remove_from_group $2 $3   ;;
    t\ 0x*\ [0-9]*) toggle_window_group $2 $3 ;;
    s\ [0-9]*)      show_group_windows $2     ;;
    h\ [0-9]*)      hide_group_windows $2     ;;
    t\ [0-9]*)      toggle_group_windows $2   ;;
    *)              usage                     ;;
esac
